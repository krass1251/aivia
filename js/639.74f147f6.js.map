{"version":3,"file":"js/639.74f147f6.js","mappings":"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","sources":["webpack://aivia_my/../../../src/components/VGrid/VRow.ts","webpack://aivia_my/../../../src/components/VGrid/VCol.ts","webpack://aivia_my/./src/views/GameView.vue","webpack://aivia_my/./src/views/GameView.vue?3e8c"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { breakpoints } from '@/composables/display'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\ntype BreakpointAlign = `align${Capitalize<Breakpoint>}`\ntype BreakpointJustify = `justify${Capitalize<Breakpoint>}`\ntype BreakpointAlignContent = `alignContent${Capitalize<Breakpoint>}`\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <\n  Name extends BreakpointAlign | BreakpointJustify | BreakpointAlignContent,\n  Type,\n> (prefix: string, def: () => Prop<Type, null>) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val) as Name\n    props[prefixKey] = def()\n    return props\n  }, {} as Record<Name, Prop<Type, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\ntype AlignValue = typeof ALIGN_VALUES[number]\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps<BreakpointAlign, AlignValue>('align', () => ({\n  type: String as PropType<AlignValue>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\ntype JustifyValue = typeof JUSTIFY_VALUES[number]\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps<BreakpointJustify, JustifyValue>('justify', () => ({\n  type: String as PropType<JustifyValue>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\ntype AlignContentValue = typeof ALIGN_CONTENT_VALUES[number]\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps<BreakpointAlignContent, AlignContentValue>('alignContent', () => ({\n  type: String as PropType<AlignContentValue>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: {\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String as PropType<typeof ALIGN_VALUES[number]>,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n      default: null,\n      validator: alignContentValidator,\n    },\n\n    ...alignContentProps,\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: ['v-row', classes.value],\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { breakpoints } from '@/composables/display'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\ntype BreakpointOffset = `offset${Capitalize<Breakpoint>}`\ntype BreakpointOrder = `order${Capitalize<Breakpoint>}`\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<Breakpoint, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = ('offset' + capitalize(val)) as BreakpointOffset\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOffset, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = ('order' + capitalize(val)) as BreakpointOrder\n    props[orderKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOrder, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n      default: null,\n      validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n    },\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","<template>\n  <div class=\"game-container\">\n    <v-row>\n      <v-col cols=\"12\" md=\"6\">\n        <v-text-field\n          @input=\"initializeGame\"\n          label=\"Width\"\n          single-line\n          type=\"number\"\n          :min=\"0\"\n          :max=\"100\"\n          v-model.number=\"width\"/>\n      </v-col>\n      <v-col cols=\"12\" md=\"6\">\n        <v-spacer></v-spacer>\n        <v-text-field\n          @input=\"initializeGame\"\n          label=\"Height\"\n          single-line\n          type=\"number\"\n          :min=\"0\"\n          :max=\"100\"\n          v-model.number=\"height\"/>\n      </v-col>\n    </v-row>\n\n    <div class=\"game-area\">\n      <div v-for=\"i in height\" :key=\"`row-${i}`\" class=\"game-row\">\n        <div\n          v-for=\"j in width\"\n          :key=\"`col-${j}`\"\n          class=\"cell\"\n          :class=\"{ 'cell--active': cells?.[i-1]?.[j-1] }\"\n          @mouseenter=\"changeCellState(i-1, j-1)\">\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst width = ref(10);\nconst height = ref(10);\nconst cells = ref([]);\n\nfunction changeCellState(x, y) {\n  cells.value[x][y] = !cells.value[x][y];\n}\n\nfunction initializeGame() {\n  cells.value = Array.from({ length: height.value }, () => new Array(width.value).fill(false));\n}\n\nwatch([width, height], initializeGame, { immediate: true });\n\n</script>\n\n<style scoped>\n.game-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.game-area {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 35px;\n  background-color: #3f3f3f;\n  border-radius: 5px;\n  overflow: scroll;\n}\n\n.game-row {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  flex-wrap: nowrap;\n}\n\n.cell {\n  flex: 0 0 35px;\n  height: 35px;\n  border: 2px solid #ffffff;\n  background-color: #d3d3d3;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.cell--active {\n  background-color: #03a9f4;\n}\n</style>\n","import script from \"./GameView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=b0d3ef50&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\krass\\\\personal\\\\tests\\\\vue\\\\aivia_my\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b0d3ef50\"]])\n\nexport default __exports__"],"names":["ALIGNMENT","SPACE","makeRowProps","prefix","def","breakpoints","props","val","prefixKey","capitalize","ALIGN_VALUES","alignValidator","str","includes","alignProps","type","String","default","validator","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","breakpoint","replace","toLowerCase","VRow","genericComponent","name","dense","Boolean","noGutters","makeTagProps","setup","_ref","slots","classes","computed","classList","forEach","value","push","h","tag","class","breakpointProps","Number","offsetProps","offsetKey","orderProps","orderKey","col","offset","order","ALIGN_SELF_VALUES","VCol","cols","alignSelf","hasColClasses","some","startsWith","width","ref","height","cells","changeCellState","x","y","initializeGame","Array","from","length","fill","watch","immediate","__exports__"],"sourceRoot":""}